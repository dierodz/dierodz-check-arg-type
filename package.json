{
  "name": "@dierodz/check-arg-type",
  "version": "1.0.0",
  "main": "./lib/index.js",
  "author": "Diego Rodr√≠guez <dierdz91@gmail.com>",
  "license": "MIT",
  "files": [
    "lib"
  ],
  "devDependencies": {
    "@babel/cli": "^7.10.5",
    "@babel/core": "^7.11.1",
    "@babel/eslint-parser": "^7.11.3",
    "@babel/eslint-plugin": "^7.11.3",
    "@babel/plugin-transform-typescript": "^7.11.0",
    "@babel/preset-env": "^7.11.0",
    "@babel/preset-typescript": "^7.10.4",
    "@babel/register": "^7.10.5",
    "@types/chai": "^4.2.12",
    "@types/mocha": "^8.0.3",
    "@types/node": "^14.6.0",
    "@typescript-eslint/eslint-plugin": "^3.9.1",
    "@typescript-eslint/parser": "^3.9.1",
    "babel-plugin-add-module-exports": "^1.0.2",
    "babel-polyfill": "^6.26.0",
    "babel-preset-minify": "^0.5.1",
    "chai": "^4.2.0",
    "cross-env": "^7.0.2",
    "eslint": "^7.7.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "mocha": "^8.1.1",
    "nyc": "^15.1.0",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.2",
    "ts-node": "^8.10.2",
    "typescript": "^3.9.7"
  },
  "scripts": {
    "clean": "npm run clean:lib && npm run clean:temp",
    "clean:lib": "rimraf lib",
    "clean:temp": "rimraf temp",
    "test": "npm run lint && npm run cover:src",
    "test:src": "cross-env TEST_ENV=src mocha -r ts-node/register 'test/**/*.ts'",
    "test:lib": "cross-env TEST_ENV=lib mocha -r ts-node/register 'test/**/*.ts'",
    "cover:src": "nyc --check-coverage npm run test:src",
    "lint": "tsc -p tsconfig.lint.json --noEmit && eslint --quiet --fix",
    "build": "npm run clean && npm run build:types && npm run build:compile && npm run build:js",
    "build:types": "tsc -p tsconfig.types.json --emitDeclarationOnly",
    "build:compile": "tsc -p tsconfig.compile.json",
    "build:js": "cross-env BABEL_ENV=production npx babel temp -d lib",
    "prepublish": "npm run test && npm run build && npm run test:lib"
  }
}
